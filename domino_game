#include <stdio.h>
#include <stdlib.h>
#include <time.h>

typedef struct _pecaDomino{
	int numberRight;
	int numberLeft;
	struct _pecaDomino *right;
	struct _pecaDomino *left;
}TppecaDomino;

TppecaDomino *inicializa(){
	return NULL;
}

TppecaDomino *cria_pecas(){
	int i, j;
	TppecaDomino *novo = (TppecaDomino *)malloc(sizeof(TppecaDomino));
	novo->left = NULL;
	TppecaDomino *aux = novo, *anterior = novo;
	novo->numberRight = 0;
	novo->numberLeft  = 0;

	for(i=1; i<=6; i++){
		for(j=0; j<=i; j++){
			aux = (TppecaDomino *)malloc(sizeof(TppecaDomino));
			aux->numberRight = j;
			aux->numberLeft = i;
			aux->left = anterior;
			anterior->right = aux;
			anterior = aux;
		}
	}

	aux->right = NULL;
	return novo;
}

TppecaDomino *insere_inicio(TppecaDomino *l, int num1, int num2){
	TppecaDomino *aux = l, *novo = (TppecaDomino *)malloc(sizeof(TppecaDomino));
	if(aux == NULL){
		novo->numberLeft = num1;
		novo->numberRight = num2;
		novo->left = NULL;
		novo->right = NULL;
		return novo;
	}
	while(aux != NULL){
		aux = aux->right;
	}
	novo->numberLeft = num1;
	novo->numberRight = num2;
	novo->right = l;
	novo->left = NULL;
	l->left = novo;
	return novo;
}

TppecaDomino *insere_fim(TppecaDomino *l, int num1, int num2){
	TppecaDomino *aux = l;
	if(aux == NULL){
		l = insere_inicio(l, num1, num2);
		return l;
	}
	while(aux->right != NULL){
		aux = aux->right;
	}
	aux->right = insere_inicio(aux->right, num1, num2);
	return l;
}

TppecaDomino *excluir(TppecaDomino *l, int num1, int num2){
	TppecaDomino *aux = l, *prox, *anterior = NULL;
	if(num1 == aux->numberLeft && num2 == aux->numberRight && aux->left == NULL){
		aux = l->right;
		aux->left = NULL;
		free(l);
		return aux;
	}
	while(num1 != aux->numberLeft || num2 != aux->numberRight || aux != NULL){
		if(num1 == aux->numberLeft || num2 == aux->numberRight){
			anterior = aux;
			aux = aux->right;
			prox = aux->right;
		} else {
			printf("Número não encontrado.\n");
			return l;
		}
	}
	if(aux->right == NULL){
		anterior = aux->left;
		anterior->right = NULL;
		free(aux);
		return l;
	}
	anterior->right = prox;
	prox->left = anterior;
	free(aux);
	return l;
}

void imprime(TppecaDomino *l){
	TppecaDomino *aux = l;
	int flag = 0;

	while(aux != NULL){
		printf("|%d||%d| ", aux->numberLeft, aux->numberRight);
		aux = aux->right;
		flag++;
		if(flag == 7) printf("\n");
		if(flag == 7) flag = 0;
	}
	printf("\n");
}



int main(){
	system("clear");
	TppecaDomino *monte = inicializa();
	monte = cria_pecas();
	imprime(monte);
	monte = excluir(monte, 6, 8);
	printf("\n\n");
	imprime(monte);
	return 0;
}
