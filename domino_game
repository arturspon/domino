#include <stdio.h>
#include <stdlib.h>

/* 
	Abreviações:
	ptr = Ponteiro


*/



typedef struct _pecaDomino{
	int numberRight;
	int numberLeft;
	struct _pecaDomino *right;
	struct _pecaDomino *left;
}TppecaDomino;

TppecaDomino *inicializa(){
	int i, j;
	TppecaDomino *novo, *p, *inicio;
	for(i = 0; i <= 6; i++)
	{
		j=i;
		for(;j <= 6; j++) // Laço para passar do 0:0 para o 1:1
		{
			novo = (TppecaDomino *)malloc(sizeof(TppecaDomino));// Cria um novo no para cada uma das peças
			if(i == 0 && j == 0)
			{
				novo->numberLeft = i; // Dá o valor para a peça da esquerda
				novo->numberRight = j;	// Dá o valor para a peça da direita
				novo->right = NULL; // Guarda o endereço da peça da direita
				novo->left = NULL; // Guarda o endereço da peça da esquerda
				p = novo;
				inicio = novo;
			}else
			{
				novo->numberLeft = i; // Dá o valor para a peça da esquerda
				novo->numberRight = j;	// Dá o valor para a peça da direita
				novo->right = NULL; // Guarda o endereço da peça da direita
				novo->left = p; // Guarda o endereço da peça da esquerda
				p->right = novo;
				p = novo;
			}
		}
	}
	return(inicio);
}

void Imprimir(TppecaDomino *pecas){
	TppecaDomino *i = pecas;
	for(i = pecas; i != NULL; i = i->left)
	{	
		printf("%d:%d\n", i->numberLeft, i->numberRight);
	}
}

int main(){
	TppecaDomino *monte;

	monte = inicializa();
	Imprimir(monte);
	return 0;
}
